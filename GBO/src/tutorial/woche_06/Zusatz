Ereignisbehandlung:

Events: Eingabeereignisse

Event -> ActionEvent, InputEvent....
InputEvent -> KeyEvent, MouseEvent...

Verarbeitung: Basis Container/Interaktionselemente
	1. Phase: Capture Phase, von Wurzel zu Blatt (aufgerufen werden EventFilter)
	2. Phase: Bubbling Phase, von Blatt zu Wurzel (aufgerufen werden EventHandler)
	Anmerkung: Es werden nur die relevanten Teilbäume durchlaufen
Quelle: Knoten im Baum
Event-Verarbeitung geht weiter bis consume auf das Event-Objekt aufgerufen wird.
Wenn dies in Capture-Phase passiert, wird Bubbling-Phase nie gestartet.

EventFilter & EventHandler müssen EventHandler implementieren

unterschiedliche Methoden zum anmelden.
public final <T extends Event> void addEventFilter(EventType <T> eventType, EventHandler<? super T> eventFilter);
public final <T extends Event> void addEventHandler(EventType <T> eventType, EventHandler<? super T> eventHandler);
add -> mehrere Methoden anmeldbar

Handler haben vereinfachte Methoden der Art 'setOnXxx' z.B. setOnAction(EventHandler<ActionEvent> event);

inverse Operationen:
add -> remove
setOnXxx() -> setOnXxx(null)

Mouse - Koordinaten relativ zu Container

******************************************************

Increment/Decrement MVP

Model:
	Zaehler
	incr
	decr
	reset
	
View:
	Initialisierung
	Ereignisse an Presenter melden
	Oberfläche aktualisieren
	
Presenter:
	Ablaufsteuerung